{"version":3,"sources":["utils.js"],"names":[],"mappings":";;;;;QAEgB,Y,GAAA,Y;AAFhB,MAAM,iBAAiB,GAAvB;;AAEO,SAAS,YAAT,CAAuB,MAAvB,EAAgC;AACnC,UAAM,aAAa,OAAO,MAAP,IAAiB,OAAO,CAAP,EAAU,MAA9C;AACA,UAAM,aAAa,EAAnB;AACA,SAAM,IAAI,IAAE,CAAZ,EAAe,IAAE,OAAO,MAAxB,EAAgC,GAAhC,EAAqC;AACjC,aAAM,IAAI,IAAE,CAAZ,EAAe,IAAE,UAAjB,EAA6B,GAA7B,EAAmC;;AAE/B,gBAAK,KAAG,CAAH,IAAQ,OAAO,CAAP,EAAU,IAAE,CAAZ,MAAmB,cAAnB,IAAqC,OAAO,CAAP,EAAU,CAAV,MAAiB,cAAnE,EAAoF;AAChF,oBAAI,IAAE,CAAN;;AAEA,uBAAQ,IAAE,UAAF,IAAgB,OAAO,CAAP,EAAU,CAAV,MAAiB,cAAzC,GAA2D;AAAE;AAAM;AACnE,sBAAM,aAAa,IAAE,CAArB;AACA,oBAAK,aAAa,CAAlB,EAAsB;AAClB,+BAAW,IAAX,CAAgB;AACZ,6BAAM,CADM;AAEZ,6BAAM,CAFM;AAGZ,gCAAS,UAHG;AAIZ,oCAAa;AAJD,qBAAhB;AAMH;AACJ;;AAED,gBAAK,KAAG,CAAH,IAAQ,OAAO,IAAE,CAAT,EAAY,CAAZ,MAAmB,cAAnB,IAAqC,OAAO,CAAP,EAAU,CAAV,MAAiB,cAAnE,EAAoF;AAChF,oBAAI,IAAE,CAAN;;AAEA,uBAAQ,IAAE,UAAF,IAAgB,OAAO,CAAP,EAAU,CAAV,MAAiB,cAAzC,GAA2D;AAAE;AAAM;AACnE,sBAAM,aAAa,IAAE,CAArB;AACA,oBAAK,aAAa,CAAlB,EAAsB;AAClB,+BAAW,IAAX,CAAgB;AACZ,6BAAM,CADM;AAEZ,6BAAM,CAFM;AAGZ,gCAAS,UAHG;AAIZ,oCAAa;AAJD,qBAAhB;AAMH;AACJ;AACJ;AACJ;AACD,WAAO,UAAP;AACH","file":"utils.js","sourcesContent":["const blackCharacter = '#';\n\nexport function getStructure( matrix ) {\n    const lineLength = matrix.length && matrix[0].length;\n    const dictionary = [];\n    for ( let i=0; i<matrix.length; i++) {\n        for ( let j=0; j<lineLength; j++ ) {\n            // Horizontal\n            if ( j==0 || matrix[i][j-1] === blackCharacter && matrix[i][j] !== blackCharacter ) {\n                let a=j;\n                // Find last blackCharacter of the row\n                for ( ; a<lineLength && matrix[i][a] !== blackCharacter; ) { a++; }\n                const wordLength = a-j;\n                if ( wordLength > 1 ) {\n                    dictionary.push({\n                        col : j,\n                        row : i,\n                        length : wordLength,\n                        horizontal : true\n                    });\n                }\n            }\n            // Vertical\n            if ( i==0 || matrix[i-1][j] === blackCharacter && matrix[i][j] !== blackCharacter ) {\n                let a=i;\n                // Find last blackCharacter of the col\n                for ( ; a<lineLength && matrix[a][j] !== blackCharacter; ) { a++; }\n                const wordLength = a-i;\n                if ( wordLength > 1 ) {\n                    dictionary.push({\n                        col : j,\n                        row : i,\n                        length : wordLength,\n                        horizontal : false\n                    });\n                }\n            }\n        }\n    }\n    return dictionary;\n}\n"],"sourceRoot":"/Users/mauriziocarboni/not_work/src"}